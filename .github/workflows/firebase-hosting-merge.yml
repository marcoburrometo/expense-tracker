# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
on:
  push:
    branches:
      - main
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # Setup a consistent Node version and enable npm cache
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'

      # Diagnose current npm auth/registry state BEFORE we sanitize (to understand 401 source)
      - name: Diagnose npm auth
        run: |
          echo "Node version: $(node -v)"
          echo "npm version: $(npm -v)"
          echo "Registry (raw): $(npm config get registry)"
          echo "--- npm config ls -l (auth lines) ---"
          npm config ls -l | grep -i auth || echo "(no auth lines)"
          echo "--- npm config ls -l (registry lines) ---"
          npm config ls -l | grep -i registry || true
          echo "--- environment tokens (masked by Actions) ---"
          env | grep -E 'NPM_TOKEN|NODE_AUTH_TOKEN|NPM_CONFIG_' || echo "(no token env vars)"
          echo "--- user .npmrc ---"; if [ -f ~/.npmrc ]; then sed -n '1,120p' ~/.npmrc; else echo "(none)"; fi
          echo "--- workspace .npmrc ---"; if [ -f .npmrc ]; then sed -n '1,120p' .npmrc; else echo "(none)"; fi
          echo "--- config files ---"
          npm config get userconfig || true
          npm config get globalconfig || true

      # (Temporary / permanent) Sanitize environment to avoid unintended auth tokens causing 401 with public packages
      - name: Sanitize npm auth
        run: |
          rm -f ~/.npmrc || true
          npm config delete //registry.npmjs.org/:_authToken || true
          npm config set registry https://registry.npmjs.org/
          unset NODE_AUTH_TOKEN NPM_TOKEN || true
          echo "Registry after sanitize: $(npm config get registry)"
          echo 'registry=https://registry.npmjs.org/' > ~/.npmrc
          echo 'always-auth=false' >> ~/.npmrc
          echo "Final ~/.npmrc:"; sed -n '1,120p' ~/.npmrc

      # Install dependencies (public only) after making sure no invalid token interferes
      - name: Install dependencies
        run: |
          echo "Starting npm ci with http loglevel to capture 401 origin"
          npm ci --loglevel=http 2>&1 | tee npm-install-http.log || INSTALL_EXIT=$?
          EXIT_CODE=${INSTALL_EXIT:-0}
          echo "----- Extract lines with 401/ERR/EPERM/EACCESS -----" || true
          grep -iE ' 401 |ERR!' -n npm-install-http.log || true
          exit ${EXIT_CODE}
      - name: Upload npm log (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: npm-http-log
          path: npm-install-http.log
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_EXPENSE_TRACKER_573FD }}
          channelId: live
          projectId: expense-tracker-573fd
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
